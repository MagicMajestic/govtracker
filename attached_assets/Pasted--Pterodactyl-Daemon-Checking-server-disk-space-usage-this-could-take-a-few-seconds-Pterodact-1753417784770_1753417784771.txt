[Pterodactyl Daemon]: Checking server disk space usage, this could take a few seconds...
[Pterodactyl Daemon]: Updating process configuration files...
[Pterodactyl Daemon]: Ensuring file permissions are set correctly, this could take a few seconds...
[Pterodactyl Daemon]: Executing cautionary malware scan...
customer@apollopanel~ Server marked as starting...
[Pterodactyl Daemon]: Pulling Docker container image, this could take a few minutes to complete...
[Pterodactyl Daemon]: Finished pulling Docker container image
NodeJS version: v18.20.4
customer@apollopanel~ Server marked as running...
NPM version: 10.8.3
Yarn version: 22.19
Git version: 2.39.2
Discord.js version: 14.21.0
customer@apollopanel:~# if [[ -d .git ]]; then git pull; fi; if [[ ! -z ${NODE_PACKAGES} ]]; then npm install ${NODE_PACKAGES}; fi; if [ -f /home/container/package.json ]; then npm install --production; fi; node /home/container/${STARTUP_FILE}
Already up to date.
npm warn config production Use `--omit=dev` instead.
npm error code ENOTEMPTY
npm error syscall rename
npm error path /home/container/node_modules/@tailwindcss/node
npm error dest /home/container/node_modules/@tailwindcss/.node-XFqkdxk8
npm error errno -39
npm error ENOTEMPTY: directory not empty, rename '/home/container/node_modules/@tailwindcss/node' -> '/home/container/node_modules/@tailwindcss/.node-XFqkdxk8'
npm error A complete log of this run can be found in: /home/container/.npm/_logs/2025-07-25T04_29_35_116Z-debug-0.log
🚀 Starting Discord Bot Curator Monitoring System...
📦 Node.js version: v18.20.4
🔧 Environment: development
🔍 Checking environment variables...
⚠️ DATABASE_URL not set - database connection may fail
🔍 Checking dependencies...
📦 node_modules exists: true
📊 Packages installed: 318
✅ All critical packages found
🚀 Initializing application...
🔧 Fixing Git divergent branches...
✅ Git issues fixed
🔧 Fixing npm installation issues...
✅ npm issues fixed
🔄 Starting in development mode...
🔍 Checking for tsx...
✅ tsx is available
📁 Using tsx to run TypeScript server...
🔧 Attempting TypeScript execution...
⚠️ Direct method failed, trying alternatives...
⚠️ Skipping npx tsx due to known ESM issues on this hosting provider
⚠️ TypeScript execution has ESM module issues on this hosting provider
🔨 Building project to JavaScript instead...
🔨 Building TypeScript to JavaScript...
📦 Creating simple Express server (most reliable)...
✅ Simple Express server created successfully
🎯 Starting built JavaScript application: ./dist/server.js...
❌ Build process failed: require() of ES Module /home/container/dist/server.js from /home/container/index.js not supported.
server.js is treated as an ES module file as it is a .js file whose nearest parent package.json contains "type": "module" which declares all .js files in that package scope as ES modules.
Instead either rename server.js to end in .cjs, change the requiring code to use dynamic import() which is available in all CommonJS modules, or change "type": "module" to "type": "commonjs" in /home/container/package.json to treat all .js files as CommonJS (using .mjs for all ES modules instead).
🔄 Starting fallback server...
🔄 Starting fallback HTTP server...
✅ Application started successfully on port 5000
✅ Fallback server running on port 5000