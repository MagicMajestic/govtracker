// –†—É—á–Ω–æ–π —ç–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
import { storage } from './storage.js';
import fs from 'fs/promises';

const DATA_DIR = './data';
const SETTINGS_DIR = './data/settings';
const ANALYTICS_DIR = './data/analytics';

async function ensureDirectories() {
  await fs.mkdir(DATA_DIR, { recursive: true });
  await fs.mkdir(SETTINGS_DIR, { recursive: true });
  await fs.mkdir(ANALYTICS_DIR, { recursive: true });
}

async function saveToFile(filePath: string, data: any) {
  const jsonData = JSON.stringify(data, null, 2);
  await fs.writeFile(filePath, jsonData, 'utf8');
}

export async function manualExport() {
  console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º —Ä—É—á–Ω–æ–π —ç–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ PostgreSQL –≤ —Ñ–∞–π–ª—ã...');
  
  try {
    await ensureDirectories();

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã
    const botSettings = await storage.getBotSettings();
    const notificationSettings = await storage.getNotificationSettings();
    const ratingSettings = await storage.getRatingSettings();
    const globalRatingConfig = await storage.getGlobalRatingConfig();
    const discordServers = await storage.getDiscordServers();
    const curators = await storage.getCurators();
    const activities = await storage.getRecentActivities(1000);

    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ –≤ –º–∞—Å—Å–∏–≤
    const botSettingsArray = Object.entries(botSettings).map(([key, value]) => ({ key, value }));

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã
    await saveToFile(`${SETTINGS_DIR}/bot-settings.json`, botSettingsArray);
    await saveToFile(`${SETTINGS_DIR}/notification-settings.json`, notificationSettings);
    await saveToFile(`${SETTINGS_DIR}/rating-settings.json`, ratingSettings);
    await saveToFile(`${SETTINGS_DIR}/global-rating-config.json`, globalRatingConfig);
    await saveToFile(`${SETTINGS_DIR}/discord-servers.json`, discordServers);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
    await saveToFile(`${ANALYTICS_DIR}/curators.json`, curators);
    await saveToFile(`${ANALYTICS_DIR}/activities.json`, activities);

    // –°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω—ã–π –±—ç–∫–∞–ø
    const fullBackup = {
      botSettings: botSettingsArray,
      notificationSettings: notificationSettings ? [notificationSettings] : [],
      ratingSettings,
      globalRatingConfig: globalRatingConfig ? [globalRatingConfig] : [],
      discordServers,
      curators,
      activities: activities.map(a => ({ ...a, curator: undefined, server: undefined })),
      responseTracking: [],
      taskReports: [],
      users: []
    };

    await saveToFile(`${DATA_DIR}/full-backup.json`, fullBackup);
    
    console.log('‚úÖ –†—É—á–Ω–æ–π —ç–∫—Å–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    console.log(`üìÅ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: ${SETTINGS_DIR}/`);
    console.log(`üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤: ${ANALYTICS_DIR}/`);
    console.log(`üíæ –ü–æ–ª–Ω—ã–π –±—ç–∫–∞–ø: ${DATA_DIR}/full-backup.json`);
    
    return fullBackup;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä—É—á–Ω–æ–º —ç–∫—Å–ø–æ—Ä—Ç–µ –¥–∞–Ω–Ω—ã—Ö:', error);
    throw error;
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —ç–∫—Å–ø–æ—Ä—Ç, –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (import.meta.url === `file://${process.argv[1]}`) {
  manualExport().catch(console.error);
}