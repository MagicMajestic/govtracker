#!/usr/bin/env node

// –ü—Ä–æ—Å—Ç–µ–π—à–∏–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è SparkredHost
console.log('üöÄ Simple Discord Bot Server for SparkredHost');

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
process.env.NODE_ENV = 'production';
process.env.PORT = process.env.PORT || 25887;

// MySQL –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è SparkredHost
process.env.DB_HOST = 'db-par-02.apollopanel.com';
process.env.DB_PORT = '3306';
process.env.DB_USER = 'u182643_kxUTQsjKxw';
process.env.DB_NAME = 's182643_govtracker';

console.log('üîß MySQL Configuration:');
console.log(`Host: ${process.env.DB_HOST}:${process.env.DB_PORT}`);
console.log(`Database: ${process.env.DB_NAME}`);
console.log(`User: ${process.env.DB_USER}`);

if (!process.env.DB_PASSWORD) {
  console.error('‚ùå DB_PASSWORD environment variable is required!');
  process.exit(1);
}

// –ü—Ä–æ—Å—Ç–æ–π Express —Å–µ—Ä–≤–µ—Ä
const express = require('express');
const path = require('path');

const app = express();
const PORT = process.env.PORT || 25887;

// –û—Å–Ω–æ–≤–Ω—ã–µ middleware
app.use(express.json());
app.use(express.static('public'));

// –ó–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–µ—Ä–∞
app.get('/health', (req, res) => {
  res.json({ 
    status: 'ok', 
    timestamp: new Date().toISOString(),
    port: PORT,
    env: process.env.NODE_ENV
  });
});

// –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
app.get('/', (req, res) => {
  res.send(`
    <html>
      <head><title>Discord Bot - SparkredHost</title></head>
      <body>
        <h1>ü§ñ Discord Bot Server</h1>
        <p>–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}</p>
        <p>–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: ${process.env.DB_NAME}</p>
        <p>–í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}</p>
        <p><a href="/health">Health Check</a></p>
      </body>
    </html>
  `);
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, '0.0.0.0', () => {
  console.log(`‚úÖ Server running on http://0.0.0.0:${PORT}`);
  console.log(`üåê Environment: ${process.env.NODE_ENV}`);
  console.log(`üìÖ Started: ${new Date().toLocaleString('ru-RU')}`);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
process.on('SIGTERM', () => {
  console.log('üõë Server shutting down...');
  process.exit(0);
});

process.on('SIGINT', () => {
  console.log('üõë Server interrupted...');
  process.exit(0);
});
